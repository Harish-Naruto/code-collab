version: '3.9'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    ports:
      - 5173:5173
    volumes:
      - .:/app
      
    working_dir: /app/apps/frontend
    env_file:
      - ./apps/frontend/.env

  api-server:
    build: 
      context: .
      dockerfile: Dockerfile
      target: api-server
    ports:
     - "3000:3000"
    volumes:
      - .:/app
      
    working_dir: /app/apps/api-server
    env_file:
      - ./apps/Api-server/.env
  
  yjs-server:
    build: 
      context: .
      dockerfile: Dockerfile
      target: yjs-server
    ports:
      - "1234:1234"
    volumes:
      - .:/app
      
    working_dir: /app/apps/yjs-server
    env_file:
      - ./apps/yjs-server/.env
    
  
  websocket-server:
    build: 
      context: .
      dockerfile: Dockerfile
      target: websocket-server
    ports:
      - "8080:8080"
    env_file:
      - ./apps/websocket-server/.env
    volumes:
      - .:/app
      
    working_dir: /app/apps/websocket-server
    depends_on:
      - redis
  
  redis:
    image: redis:7-alpine
    container_name: redis
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  redis-data: